<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-PNT03NCT" failures="0" tests="2" name="Default test" time="0.135" errors="0" timestamp="2023-02-05T14:10:28 SGT">
  <testcase classname="com.sddevops.xjjt3.eclipse.NewTest" name="@BeforeTest beforeTest" time="0.072">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Program Files\Google\Chrome\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Program Files\Google\Chrome\chromedriver.exe
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:345)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:161)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:156)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:42)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:315)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:456)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:147)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:50)
at com.sddevops.xjjt3.eclipse.NewTest.beforeTest(NewTest.java:55)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:644)
at org.testng.TestRunner.beforeRun(TestRunner.java:633)
at org.testng.TestRunner.run(TestRunner.java:595)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.sddevops.xjjt3.eclipse.NewTest" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.sddevops.xjjt3.eclipse.NewTest" name="checkId" time="0.0">
    <skipped/>
  </testcase> <!-- checkId -->
  <testcase classname="com.sddevops.xjjt3.eclipse.NewTest" name="checkTitle" time="0.0">
    <skipped/>
  </testcase> <!-- checkTitle -->
</testsuite> <!-- Default test -->
